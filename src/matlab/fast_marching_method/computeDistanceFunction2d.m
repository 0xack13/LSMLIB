%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% computeDistanceFunction2d() computes a distance from an 
% arbitrary level set function in two-dimensions using the 
% Fast Marching Method.
% 
% Usage: distance_fcn = ...
%          computeDistanceFunction2d(phi, dX, ...
%                                    mask, ...
%                                    spatial_discretization_order)
%
% Arguments:
% - phi:                           level set function to use in 
%                                    computing distance function
% - dX:                            array containing the grid spacing
%                                    in each coordinate direction
% - mask:                          mask for domain of problem;
%                                    grid points outside of the domain
%                                    of the problem should be set to a
%                                    negative value
%                                    (default = [])
% - spatial_discretization_order:  order of discretization for 
%                                    spatial derivatives
%                                    (default = 2)
%
% Return value:
% - distance_fcn:                  distance function
%
% NOTES:
% - All data arrays are assumed to be in the order generated by the 
%   MATLAB meshgrid() function.  That is, data corresponding to the 
%   point (x_i,y_j) is stored at index (j,i) in the data array.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Copyright:  (c) 2005-2008 Kevin T. Chu and Masa Prodanovic
% Revision:   $Revision$
% Modified:   $Date$
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

